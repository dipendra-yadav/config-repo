spring.application.name=common-apigateway



#zuul proxy -API gateway
#zuul.routes.search-api.serviceId=search-service
#zuul.routes.booking-api.serviceId=booking-service
#zuul.routes.checkin-api.serviceId=checkin-service
#zuul.routes.fare-api.serviceId=fares-service

#zuul.prefix=api
#zuul.routes.search-api.path=/search-path/**
#zuul.routes.booking-api.path=/booking-path/**
#zuul.routes.checkin-api.path=/checkin-path/**
#zuul.routes.fare-api.path=/fare-path/**




#This will help the microservices to connect to the Eureka server
eureka.client.serviceUrl.defaultZone: http://localhost:8761/eureka/
eureka.client.registerWithEureka: true
eureka.client.fetchRegistry: true




#Set sensitiveHeaders property on empty value to enable Authorization HTTP header forward.
#By default Zuul cut that header while forwarding our request to the target API which is incorrect because of the basic authorization demanded by our services behind gateway.
#zuul.routes.search-api.sensitiveHeaders =
#zuul.routes.booking-api.sensitiveHeaders =
#zuul.routes.checkin-api.sensitiveHeaders =
#zuul.routes.fare-api.sensitiveHeaders =

